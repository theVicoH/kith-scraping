services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
    env_file:
      - ./frontend/.env.dev
    environment:
      - NODE_ENV=development
  
  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile.dev
    ports:
      - "50051:50051"
    volumes:
      - ./backend:/app
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14.17-alpine3.20
    restart: always
    env_file:
      - .env.dev
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./dump:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - .env.dev
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  pgadmin-data:
